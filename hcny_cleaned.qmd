---
title: "loading/cleaning/wrangling/exploring"
author: "Edward Cruz"
format: docx
---

```{r}
library(readxl)
#update.packages("tidyverse")
library(tidyverse)
#update.packages("dplyr")
library(dplyr)
#update.packages('mgcv')
library(mgcv)
```

```{r}
# Output cleaned data file to a csv file.
hcny_data <- read.csv("C:/Users/ecruz/OneDrive/Documents/UTSA - Data Science Program/Semester Classes/Practicum II Repository/P2-Practicum-II-Portfolio-EdwardCruz/hcny_CleanDraft.csv", header = FALSE, stringsAsFactors = FALSE)
```

```{r}
head(hcny_data)
```
```{r}
str(hcny_data)
```
```{r}
summary(hcny_data)
```
```{r}
view(hcny_data)
```

```{r}
# Merge the first two rows to create a proper header
header <- hcny_data[1:4, ]
header <- sapply(header, function(x) paste(na.omit(x), collapse = " "))
colnames(hcny_data) <- header
head(header)
```

```{r}
# Remove the first two rows (header rows) and any completely blank rows
hcnydata_cleaned <- hcny_data[-c(1,2), ]
head(hcnydata_cleaned)
```
```{r}
# Assuming hcny_data_cleaned is your cleaned data frame
colnames(hcnydata_cleaned) <- c("State", "Varroa_Mites", "Other_Parasites_1/", "Disease_2/", "Pesticides", "Other_3/", "Unknown")
```

```{r}
head(hcnydata_cleaned)
```

```{r}
# Convert specified columns to numeric
hcnydata_cleaned <- hcnydata_cleaned %>%
  mutate(across(c("Varroa_Mites", "Other_Parasites_1/", "Disease_2/", "Pesticides", "Other_3/", "Unknown"), as.numeric))
```


```{r}
# View the updated data frame
hcnydata_cleaned<-hcnydata_cleaned[-1,]
```

```{r}
head(hcnydata_cleaned)
```
```{r}
# Verify the changes
str(hcnydata_cleaned)
```

```{r}
head(hcnydata_cleaned)
```

```{r}
view(hcnydata_cleaned)
```

```{r}
ggplot(hcnydata_cleaned, aes(Varroa_Mites)) + geom_histogram()
```

```{r}
ggplot(hcnydata_cleaned, aes(x = Varroa_Mites)) +
  geom_histogram(binwidth = 1, fill = "blue", color = "black") +
  labs(title = "Histogram of Varroa Mites",
       x = "Varroa Mites",
       y = "Frequency")
```
```{r}
# Example scatter plot of two variables
ggplot(hcnydata_cleaned, aes(x = Varroa_Mites, y = "Desease_2/")) +
  geom_point() +
  labs(title = "Scatter Plot of Varroa Mites vs Disease",
       x = "Varroa Mites",
       y = "2 American and European Foul Brood")
```





```{r}
view(hcnydata_cleaned)
```

```{r}
# Write the cleaned data to a new CSV file
write.csv(hcnydata_cleaned, "C:/Users/ecruz/OneDrive/Documents/UTSA - Data Science Program/Semester Classes/Practicum II Repository/P2-Practicum-II-Portfolio-EdwardCruz/docs/hcnydata_cleaned.csv", row.names = FALSE)
```

********************Conclusion- all code below is test code right now********************************

```{r}
# Assuming hcnydata_cleaned is your data frame
hcnydata_cleaned <- hcnydata_cleaned[apply(hcnydata_cleaned, 1, function(x) !all(is.na(x))), ]

# Print the modified data frame to verify the changes
head(hcnydata_cleaned)
view(hcnydata_cleaned)

```


```{r}
str(hcnydata_cleaned)
```


```{r, message=FALSE}
#update.packages('mgcv')
library(mgcv)
```



```{r}
# Convert the 'state' column to a factor
hcnydata_cleaned$state <- as.factor(hcnydata_cleaned$state)

# Display the resulting data frame
head(hcnydata_cleaned)
```

```{r}
# Step 3: Reindex the rows starting from 1
rownames(hcnydata_cleaned) <- NULL
```




```{r}
# Identify the rows to exclude
rows_to_exclude <- c(46)

# Remove rows 45 to 52 while excluding row 46
data_hcny <- hcnydata_cleaned[-c(45:52)[-which(c(45:52) %in% rows_to_exclude)], ]
```



```{r}
library(ggplot2)

# Create a bar graph to show state and varroa_mites
ggplot(data = data_hcny, aes(x = state, y = varroa_mites)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Varroa Mites by State",
       x = "State",
       y = "Varroa Mites Count") +
  theme_minimal() +
  coord_flip()
```




# Remove all rows with any NA values

```{r}

library(tidyr)


my_data <- data_hcny %>% drop_na()

# Verify that NAs have been removed
glimpse(my_data)
```
# Bivariate Analysis

```{r, message=FALSE, warning=FALSE}
## Example of a bivariate plot between 'state' and 'varroa_mites'
ggplot(my_data, aes(x = disease, y = varroa_mites)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(title = "Bivariate Relationship between State and Varroa Mites",
       x = "State",
       y = "Varroa Mites")
```
# Multivariable GLM

```{r}
install.packages("tidymodels")
library(tidymodels)
library(broom)

# Specify the GLM model
glm_spec <- linear_reg() %>%
  set_engine("glm")

# Create a recipe for preprocessing the data
glm_recipe <- recipe(varroa_mites ~ other_pests + disease + pesticides + other + unknown, data = my_data) %>%
  step_normalize(all_predictors())

# Create a workflow
glm_workflow <- workflow() %>%
  add_model(glm_spec) %>%
  add_recipe(glm_recipe)

# Fit the model
glm_fit <- fit(glm_workflow, data = my_data)

# Print the model summary using tidy()
model_summary <- tidy(glm_fit)
print(model_summary)
```




